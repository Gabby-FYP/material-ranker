"""First migration

Revision ID: fa5ba9350ffe
Revises: 
Create Date: 2025-02-28 05:13:32.241218

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_file
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'fa5ba9350ffe'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('adminuser',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('fullname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login_datetime', sa.DateTime(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_adminuser_email'), 'adminuser', ['email'], unique=True)
    op.create_table('level',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_level_title'), 'level', ['title'], unique=True)
    op.create_table('materiallabels',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_materiallabels_title'), 'materiallabels', ['title'], unique=True)
    op.create_table('materialvector',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('fullname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('matric_number', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login_datetime', sa.DateTime(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_matric_number'), 'user', ['matric_number'], unique=True)
    op.create_table('material',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('vector_id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('authors', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('external_download_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cover_image', sqlalchemy_file.types.ImageField(), nullable=True),
    sa.Column('content', sqlalchemy_file.types.FileField(), nullable=True),
    sa.Column('status', sa.Enum('pending_approval', 'pending_vectorization', 'vectorized', 'rejected', 'removed', name='materialstatus'), nullable=False),
    sa.Column('created_datetime', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['vector_id'], ['materialvector.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_material_status'), 'material', ['status'], unique=False)
    op.create_table('adminmaterial',
    sa.Column('admin_user_id', sa.Uuid(), nullable=False),
    sa.Column('material_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['admin_user_id'], ['adminuser.id'], ),
    sa.ForeignKeyConstraint(['material_id'], ['material.id'], ),
    sa.PrimaryKeyConstraint('admin_user_id', 'material_id')
    )
    op.create_table('materiallevel',
    sa.Column('material_id', sa.Uuid(), nullable=False),
    sa.Column('level_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['level_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['material_id'], ['material.id'], ),
    sa.PrimaryKeyConstraint('material_id', 'level_id')
    )
    op.create_table('usermaterial',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('material_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['material_id'], ['material.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'material_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('usermaterial')
    op.drop_table('materiallevel')
    op.drop_table('adminmaterial')
    op.drop_index(op.f('ix_material_status'), table_name='material')
    op.drop_table('material')
    op.drop_index(op.f('ix_user_matric_number'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('materialvector')
    op.drop_index(op.f('ix_materiallabels_title'), table_name='materiallabels')
    op.drop_table('materiallabels')
    op.drop_index(op.f('ix_level_title'), table_name='level')
    op.drop_table('level')
    op.drop_index(op.f('ix_adminuser_email'), table_name='adminuser')
    op.drop_table('adminuser')
    # ### end Alembic commands ###
